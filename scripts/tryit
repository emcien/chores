#!/usr/bin/env ruby

require_relative '../lib/parenting'

# build a coordinator that allows 2 children at a time
boss = Parenting::Boss.new(2)

boss.add_chore({
  :name       => "touch b",
  :deps       => ['ls', 'touch'],
  :command    => "touch /tmp/test",
  :on_success => lambda { STDERR.puts "b succeeded" },
  :on_failure => lambda { STDERR.puts "b failed"    },
  :on_stderr  => lambda { |ln| STDERR.puts "b produced: #{ln}" }
})

boss.add_chore({
  :name       => "touch",
  :command    => "touch /tmp/test",
  :on_success => lambda { STDERR.puts "a succeeded" },
  :on_failure => lambda { STDERR.puts "a failed"    },
  :on_stderr  => lambda { |ln| STDERR.puts "a produced: #{ln}" }
})

['ls', 'ls -l /no', 'ls -a /', 'echo hello'].each do |cmd|
  boss.add_chore({
    :name       => cmd,
    :deps       => ["touch"],
    :command    => cmd,
    :on_success => lambda { STDERR.puts "#{cmd} succeeded" },
    :on_failure => lambda { STDERR.puts "#{cmd} failed"    },
    :on_stderr  => lambda { |ln| STDERR.puts "#{cmd} produced: #{ln}" }
  })
end

boss.run!

